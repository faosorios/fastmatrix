useDynLib(fastmatrix, .registration = TRUE)

## from "stats" package:
importFrom("stats",
           .getXlevels, coef, complete.cases, cov, cov2cor, logLik, model.matrix,
           model.response, pchisq, pt, quantile, var)

## Our exports:
export(array.mult, asSymmetric, bezier, bracket.prod, cg, cholupdate, circulant,
       comm.info, comm.prod, commutation, constructX, corAR1, corCS, cov.MSSD,
       cov.weighted, dupl.cross, dupl.info, dupl.prod, duplication, equilibrate,
       extractL, extractU, frank, geomean, hadamard, harris.test, helmert, kurtosis,
       krylov, is.lu, is.lower.tri, is.upper.tri, jacobi, kronecker.prod, ldl, lu,
       lu2inv, Mahalanobis, matrix.inner, matrix.norm, mediancenter, minkowski,
       moments, ols, ols.fit, ols.fit.cg, ols.fit.chol, ols.fit.qr, ols.fit.svd,
       ols.fit.sweep, power.method, ridge, seidel, sherman.morrison, skewness,
       sweep.operator, symm.info, symm.prod, symmetrizer, vec, vech, wilson.hilferty,
       whitening)

# Exported S3 methods
export(lu.default, solve.lu)

## Register S3 methods
S3method(deviance, ols)
S3method(logLik, ols)
S3method(lu, default)
S3method(print, Harris.test)
S3method(print, ols)
S3method(print, ridge)
S3method(print, summary.ols)
S3method(solve, lu)
S3method(summary, ols)
